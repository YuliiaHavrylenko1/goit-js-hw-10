{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport \"../css/1-timer.css\";\n\nconst refs = {\n  input: document.querySelector(\"#datetime-picker\"),\n  startBtn: document.querySelector(\"[data-start]\"),\n  days: document.querySelector(\"[data-days]\"),\n  hours: document.querySelector(\"[data-hours]\"),\n  minutes: document.querySelector(\"[data-minutes]\"),\n  seconds: document.querySelector(\"[data-seconds]\"),\n};\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        position: \"topRight\",\n        message: \"Please choose a date in the future\",\n        backgroundColor: \"red\",\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.startBtn.addEventListener(\"click\", () => {\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI(convertMs(0));\n      refs.input.disabled = false;\n      return;\n    }\n\n    updateTimerUI(convertMs(diff));\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","diff","updateTimerUI","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"oLAOA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAU,KAEdF,EAAK,SAAS,SAAW,GAEzB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,SAAU,WACV,QAAS,qCACT,gBAAiB,KACzB,CAAO,EACDN,EAAK,SAAS,SAAW,KAEzBC,EAAmBI,EACnBL,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAO,EAAUP,EAAK,MAAOG,CAAO,EAE7BH,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBE,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAcC,EAAU,CAAC,CAAC,EAC1BV,EAAK,MAAM,SAAW,GACtB,MACD,CAEDS,EAAcC,EAAUF,CAAI,CAAC,CAC9B,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAc,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDd,EAAK,KAAK,YAAce,EAAeJ,CAAI,EAC3CX,EAAK,MAAM,YAAce,EAAeH,CAAK,EAC7CZ,EAAK,QAAQ,YAAce,EAAeF,CAAO,EACjDb,EAAK,QAAQ,YAAce,EAAeD,CAAO,CACnD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}